package NotaQLGraph.PerformanceTest.HeterogeneTypenTest;

import NotaQLGraph.Database.Database;
import NotaQLGraph.Database.Neo4JDatabase;
import NotaQLGraph.NotaQLGraph;
import com.tinkerpop.blueprints.Edge;
import com.tinkerpop.blueprints.Graph;
import com.tinkerpop.blueprints.Vertex;

/**
 * Created by yannick on 14.04.16.
 */
public class HeterogeneTest {

    static void createDaten() {
        Database database = new Neo4JDatabase("/tmp/test.db");
        Graph graph = database.getDatabase();
        Vertex a = graph.addVertex(999);
        Vertex b = graph.addVertex(888);
        Vertex c = graph.addVertex(777);
        Vertex d = graph.addVertex(666);
        Vertex e = graph.addVertex(555);
        Vertex f = graph.addVertex(444);
        Vertex x = graph.addVertex(333);
        Vertex y = graph.addVertex(222);
        Vertex z = graph.addVertex(111);
        a.setProperty("name", "Anton");
        a.setProperty("ort", "Aachen");
        a.setProperty("type", "person");


        b.setProperty("name", "Bertha");
        b.setProperty("ort", "Frankfurt");
        b.setProperty("type", "person");


        c.setProperty("name", "Caesar");
        c.setProperty("ort", "Coburg");
        c.setProperty("type", "person");

        d.setProperty("name", "Dora");
        d.setProperty("type", "person");

        e.setProperty("name", "Emil");
        e.setProperty("ort", "Aachen");
        e.setProperty("type", "person");

        f.setProperty("name", "Friedrich");

        f.setProperty("ort", "Frankfurt");
        f.setProperty("type", "person");

        x.setProperty("name", "Frankfurt");
        x.setProperty("type", "ort");
        x.setProperty("einwohner", 210000);
        y.setProperty("name", "Coburg");
        y.setProperty("type", "ort");
        z.setProperty("name", "Aachen");
        z.setProperty("type", "ort");
        graph.shutdown();
    }

    static String notaql =
                        "IN-ENGINE: neo4j(path <- '/tmp/test.db'),\n" +
                        "OUT-ENGINE: neo4j(path <- '/tmp/test.db'),\n" +
                        "IN-FILTER: (type = 'person'),"+
                        "OUT._id <- IN._id," +
                        "OUT._e_?( name=IN.ort &&(type='ort')) <- EDGE(_outgoing, _l <- 'wohntIn', seit <- 2016);" +

                                "IN-ENGINE: neo4j(path <- '/tmp/test.db'),\n" +
                                "OUT-ENGINE: csv(csv_path<-'/tmp/einwohner.csv'),"+
                                "IN-FILTER:  (type = 'person' ) && _e?(_l='wohntIn')_?(einwohner >= 200000)._id,"+
                                "OUT._id <- IN._id," +
                                "OUT.name <- IN.name;" +



                        "";

        public static void main (String[] args) {
            createDaten();
            long davor = System.currentTimeMillis();
            NotaQLGraph.notaqlGraph(notaql);
            long danach = System.currentTimeMillis();
            long dauer = danach-davor;
            System.out.println(dauer/1000+"Sekunden");

        }


}
